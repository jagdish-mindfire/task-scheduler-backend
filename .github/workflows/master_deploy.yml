name: Prod API Deployment

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Setting Environment Variables
      run: |
        ############### SETTING ENV FILE STARTS ######################################################
        FILE_NAME=".env"
        echo "TZ='Asia/Kolkata'" > $FILE_NAME
        echo "PORT=${{vars.LISTEN_PORT}}" >> $FILE_NAME
        echo "REFRESH_TOKEN_EXPIRY=${{vars.REFRESH_TOKEN_EXPIRY}}" >> $FILE_NAME
        echo "ACCESS_TOKEN_EXPIRY=${{vars.ACCESS_TOKEN_EXPIRY}}" >> $FILE_NAME
        echo "MONGO_DB_STRING=${{secrets.MONGO_DB_STRING}}" >> $FILE_NAME
        echo "JWT_PRIVATE_KEY=${{secrets.JWT_PRIVATE_KEY}}" >> $FILE_NAME
        echo "SALT_ROUNDS=11" >> $FILE_NAME
        ############### SETTING ENV FILE END ######################################################

    - name: SSH Connection
      run: |
        mkdir -p ~/.ssh
        echo "$PRIVATE_KEY_CONTENT" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}} echo "Connection established"
      env:
        PRIVATE_KEY_CONTENT: ${{secrets.SSH_KEY}}
      
    - name: Coping Files to Server
      run: |
        ssh ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}} "sudo rm -rf task-scheduler-backend && sudo mkdir -p task-scheduler-backend"
        sudo tar --exclude=".git*" --exclude="id_rsa" -cf - . | ssh ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}} "sudo tar -C task-scheduler-backend -xf -"
        
    - name: Build and Deploy with Docker Compose
      run: |
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          cd task-scheduler-backend
          
          # Stop and remove existing containers
          docker-compose stop || true
          docker-compose down || true
          
          # Wait a few seconds to ensure containers are fully stopped
          sleep 5
          
          # Build and start containers
          docker-compose up -d --build
        EOF
        
    - name: Clean up Docker
      run: |
        ssh ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}} "docker system prune -f"
