{
  "openapi": "3.0.0",
  "info": {
    "title": "Task Scheduler API",
    "description": "API documentation for the Task Scheduler application",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "paths": {
    "/auth/signup": {
      "post": {
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "johndoe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  },
                  "name": {
                    "type": "string",
                    "example": "johndoe"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Log in a user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "johndoe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/auth/token": {
      "post": {
        "summary": "Get new access token with refresh token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refresh_token": {
                    "type": "string",
                    "example": "521b612c-9897-4181-b82a-4ad4346154de"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A new access token"
          },
          "400": {
            "description": "Invalid refresh token"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Logout user (terminate user session)",
        "description": "To terminate current session (type='one'), to terminate all sessions use type='all'",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refresh_token": {
                    "type": "string",
                    "example": "521b612c-9897-4181-b82a-4ad4346154de"
                  },
                  "type": {
                    "type": "string",
                    "example": "all"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged out successfully."
          },
          "400": {
            "description": "Invalid refresh token"
          }
        }
      }
    },
    "/task/?sort=asc": {
      "get": {
        "summary": "Get all tasks for the authenticated user",
        "description": "The sort query param takes 'asc' or 'desc' values. If asc is sent, the result will be sorted ascending according to the due date.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "All tasks for the authenticated user"
          },
          "401": {
            "description": "User is not authenticated"
          },
          "400": {
            "description": "There are no tasks"
          }
        }
      }
    },
    "/task/${taskId}": {
      "get": {
        "summary": "Get a single task details for the authenticated user",
        "description": "taskId should be passed as param",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Task details"
          },
          "401": {
            "description": "User is not authenticated"
          },
          "400": {
            "description": "Task not found"
          }
        }
      },
      "post": {
        "summary": "Create a task",
        "description": "task will be created for the user by provided data",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "content":{
          "application/json": {
            "schema": {
             "type":"object",
             "properties":{
              "title":{
                "type":"string",
                "example":"Task Title"
              },
              "description":{
                "type":"string",
                "example":"Task Description"
              },
              "due_date":{
                "type":"string",
                "format":"date-time",
                "example":"2022-01-01T12:00:00Z"
              }
             }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task details"
          },
          "401": {
            "description": "User is not authenticated"
          },
          "400": {
            "description": "Task not found"
          }
        }
      },
      "patch":{
        "summary": "Update a task",
        "description": "Task will be updated for the user by provided taskId and updated data",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "content":{
          "application/json": {
            "schema": {
             "type":"object",
             "properties":{
              "title":{
                "type":"string",
                "example":"Updated Task Title"
              },
              "description":{
                "type":"string",
                "example":"Updated Task Description"
              },
              "due_date":{
                "type":"string",
                "format":"date-time",
                "example":"2022-02-01T12:00:00Z"
              }
             }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task updated successfully"
          },
          "401": {
            "description": "User is not authenticated"
          },
          "400": {
            "description": "Task not found"
          }
        }
      },
      "delete":{
        "summary": "Delete a task",
        "description": "Task will be deleted for the user by provided taskId",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted successfully"
          },
          "401": {
            "description": "User is not authenticated"
          },
          "400": {
            "description": "Task not found"
          }
        }
      }
    }
  }
}
